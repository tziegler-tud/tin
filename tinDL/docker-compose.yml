version: '3.3'

services:
  tin:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: tin-container
    ports:
      - "8900:8900"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
    restart: on-failure
    networks:
      - tin_network
  db:
    image: mysql:8.4.1
    restart: always
    environment:
      MYSQL_DATABASE: 'tin'
      # So you don't have to use root, but you can if you like
      MYSQL_USER: 'tin_user'
      # You can use whatever password you like
      MYSQL_PASSWORD: 'XMuxr7KFAdWmnBq1OSk3'
      # Password for root access
      MYSQL_ROOT_PASSWORD: 'UYqh3f#4%Jz68WGy&%'
    ports:
      # <Port exposed> : <MySQL Port running inside container>
      - '3306:3306'
      - '33060:33060'
      # Where our data will be persisted
    volumes:
      - my-db:/var/lib/mysql
    networks:
      - tin_network

  redis:
    image: redis:7.2.5
    restart: always
    ports:
      - '6379:6379'
    networks:
      - tin_network

  wpmongo:
    image: mongodb/mongodb-community-server:5.0.21-ubuntu2004-20240703T064600Z
    networks:
      - tin_network
#  webprotege:
#    image: protegeproject/webprotege:latest
#    restart: always
#    environment:
#      - webprotege.mongodb.host=wpmongo
#    ports:
#      - '5000:8080'
#    depends_on:
#      - wpmongo
#    volumes:
#      - ./.protegedata/protege:/srv/webprotege
# Names our volume
volumes:
  my-db:

networks:
  tin_network:
    driver: bridge