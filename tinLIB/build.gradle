import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
    id 'org.springframework.boot' version '3.3.0'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'org.jetbrains.kotlin.jvm' version '2.0.21'
    id 'org.jetbrains.kotlin.plugin.spring' version '2.0.21'
}

repositories {
    mavenCentral()
    mavenLocal()
    google()
}

dependencies {
//    implementation(project(":tinDL"))
//    implementation(project(":tinDB"))
    // kotlin
    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation "org.jetbrains.kotlin:kotlin-reflect"
    implementation"org.jetbrains.kotlinx:kotlinx-serialization-json:1.3.0"

    // spring
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.1'

    // database
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'com.mysql:mysql-connector-j:8.2.0'

    // other
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation group: 'jakarta.servlet', name: 'jakarta.servlet-api', version: '6.1.0'
    annotationProcessor group: 'org.springframework.boot', name: 'spring-boot-configuration-processor', version: '3.3.0'
}



tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

tasks.withType(Test).configureEach {
    testLogging {
        events "passed", "skipped", "failed"
    }
}

tasks.withType(KotlinCompile).configureEach {
    kotlinOptions {
        jvmTarget = '17' // Use Java 17 instead of 15
//        freeCompilerArgs = ['-Xjsr305=strict']
    }
}