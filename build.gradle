plugins {
    id 'org.springframework.boot' version '2.6.3'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'org.jetbrains.kotlin.plugin.spring' version '1.6.0'
    id 'org.jetbrains.kotlin.jvm' version '1.6.0'
    id 'org.jetbrains.kotlin.kapt' version '1.6.0'
}

repositories {
    mavenCentral()
}

def kotlinVersion = "1.6.0"

sourceSets {
    main {
        kotlin.srcDirs += 'tin/src/main/kotlin'
    }
}

dependencies {
    implementation 'org.javatuples:javatuples:1.2'

    // kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"

    // spring
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // test stuff
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.2'
    testImplementation "org.jetbrains.kotlin:kotlin-test:$kotlinVersion"

    // database
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'mysql:mysql-connector-java'


}

kapt {
    correctErrorTypes = true
}

test {
    useJUnitPlatform()
}


compileKotlin {
    kotlinOptions.jvmTarget = '11'
    kotlinOptions.freeCompilerArgs += ["-Xuse-experimental=kotlin.ExperimentalStdlibApi"]
}

compileTestKotlin {
    kotlinOptions.jvmTarget = '11'
    kotlinOptions.freeCompilerArgs += ["-Xuse-experimental=kotlin.ExperimentalStdlibApi"]
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

tasks.withType(Test).configureEach {
    testLogging {
        events "passed", "skipped", "failed"
    }
}